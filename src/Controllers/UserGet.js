
import User from '../Models/User.js';

/**
 * @openapi
 * /users/check-email:
 *   get:
 *     tags:
 *       - /users
 *     summary: Find users by gmail
 *     description: Returns a user if it matches of any registered email
 *     parameters:
 *       - in: query
 *         name: email
 *         required: true
 *         type: string
 *         
 *     responses:
 *        '200':
 *          description: OK
 *          content:
 *            application/json:
 *              schema:
 *                $ref: '#/components/schemas/User'
 *          '400':
 *            description: Email are required
 *          '404':
 *            description: User not found
 *          '500':
 *            description: Internal Server Error
 * 
 *components:
 *  schemas:
 *   User:
 *     type: object
 *     properties:
 *       _id:
 *         type: string
 *         description: Auto-generated by MongoDB
 *       name:
 *         type: string
 *       lastname:
 *         type: string
 *       email:
 *         type: string
 *       rol:
 *         type: string
 *         enum: [teacher, student]
 *       creationDate:
 *         type: string
 *         format: date-time
 *       
 *         
 *     example:
 *        _id: 645a9716d6743f7de79003b9
 *        name: "name1"
 *        lastname": lastname1"
 *        email: "email1@gmail.com"
 *        rol: "teacher"
 *        creationDate: 2023-05-09T18:55:18.010+00:00
 * 
 */

const getUserByEmail=async(request, response,next)=>{
  try {
    const {email}=request.query;
    const user=await User.findOne({email});
  if (!email) {
    return response.status(400).send('Email are required');
  }
  if (!user) {
    return response.status(404).send('User not found');
  } 
  return response.status(200).json(user);
  
    
  } catch (error) {
    next(error);
  }
  
}
export default getUserByEmail;