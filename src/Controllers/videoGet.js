import Video from '../Models/videoProject.js';

/**
 * @openapi
 * /users/findProject:
 *   get:
 *     tags:
 *       - /users
 *     summary: Find projects asign to teacher or student by email
 *     description: Returns all projects, or you can filter by teacher email, student name and email.
 *     parameters:
 *       - in: query
 *         name: teachEmail
 *         type: string
 *       
 *       - in: query
 *         name: studentName
 *         type: string
 * 
 *       - in: query
 *         name: studentEmail
 *         type: string
 *         
 *     responses:
 *        '200':
 *          description: OK
 *          content:
 *            application/json:
 *              schema:
 *                $ref: '#/components/schemas/Project'
 *          '500':
 *            description: Internal Server Error
 * 
 *components:
 *  schemas:
 *   Project:
 *     type: object
 *     properties:
 *       _id:
 *         type: string
 *         description: Auto-generated by MongoDB
 *       studentLastName:
 *         type: string
 *       studentEmail:
 *         type: string
 *       email:
 *         type: string
 *       teachEmail:
 *         type: string
 *       url:
 *         type: string
 *       projectName:
 *         type: string
 *       description:
 *         type: string
 *       creationDate:
 *         type: string
 *         format: date-time
 *       assesment:
 *         type: array
 *         properties:
 *           skill:
 *             type:string
 *           timestamp:
 *             type:string
 *           score:
 *             type:Number
 *           comment:
 *             type:Number
 * 
 *     example:
 *        _id: 646ea137aa8b403ecb5b82d0
 *        studentName: "Julissa"
 *        studentLastName: "Espinosa"
 *        studentEmail": "julissa@gmail.com"
 *        teachEmail: "email1@gmail.com"
 *        url: "https://www.youtube.com/watch?v=aqp3VQEVUEY"
 *        projectName: "EdVisto"
 *        description: "Plataforma edvisto"
 *        creationDate: 2023-05-24T23:43:51.722Z
 * 
 */

const getVideoProjects=async(request, response,next)=>{
  try {
    const {teachEmail,studentName,studentEmail}=request.query;
    const filter={
      ...teachEmail && {teachEmail},
      ...studentName && {studentName},
      ...studentEmail && {studentEmail}
    };

  
    const video=await Video.find(filter);
    return response.status(200).json(video);
  
    
  } catch (error) {
    next(error);
  }
  
}
export default getVideoProjects;